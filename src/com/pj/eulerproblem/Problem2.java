package com.pj.eulerproblem;

import java.util.ArrayList;
import java.util.List;

/**
 * <strong>Question :</strong><br/>
 * <p>
 * Each new term in the Fibonacci sequence is generated by adding the previous
 * two terms. By starting with 1 and 2, the first 10 terms will be:
 * 
 * 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
 * 
 * By considering the terms in the Fibonacci sequence whose values do not exceed
 * four million, find the sum of the even-valued terms
 * </p>
 * 
 * @author prajin
 * 
 */
public class Problem2 {
	public List<Integer> sequence;
	public int sum = 0;

	public Problem2() {
		sequence = new ArrayList<Integer>();
		sequence.add(1);
	}

	public void getFibonacciSeriesSumForEvenTerms(int i, int j) {
		sequence.add(j);
		if (j % 2 == 0) {
			sum = sum + j;
		}
		int sequenceSum = i + j;
		if (sequenceSum < 4000000) {	
			getFibonacciSeriesSumForEvenTerms(j, sequenceSum);
		}
	}

	public void display() {
		for (int i = 0; i < sequence.size(); i++) {
			System.out.print(sequence.get(i) + " ");
		}
		System.out.println("Sum : " + sum);
	}

	static public void main(String args[]) {
		Problem2 problem = new Problem2();
		problem.getFibonacciSeriesSumForEvenTerms(1, 2);
		problem.display();
	}
}
